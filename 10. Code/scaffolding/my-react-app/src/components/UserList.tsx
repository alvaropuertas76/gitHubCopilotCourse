// Generated by Copilot

import React, { ChangeEvent } from "react";
import { User } from "./types";

/**
 * UserList component displays a list of users with editing and accessibility.
 * Generated by Copilot
 */
interface UserListProps {
  users: User[];
  editUserId: number | null;
  editUser: User;
  onEditUser: (user: User) => void;
  onEditUserChange: (e: ChangeEvent<HTMLInputElement>) => void;
  onSaveUser: () => void;
  onDeleteUser: (id: number) => void;
  onCancelEdit: () => void;
  searchUser: string;
  setSearchUser: (s: string) => void;
}

/**
 * User list with editing and accessibility.
 * Generated by Copilot
 */
const UserList: React.FC<UserListProps> = ({
  users,
  editUserId,
  editUser,
  onEditUser,
  onEditUserChange,
  onSaveUser,
  onDeleteUser,
  onCancelEdit,
  searchUser,
  setSearchUser,
}) => (
  <section>
    <h3>Users</h3>
    <input
      value={searchUser}
      onChange={(e) => setSearchUser(e.target.value)}
      placeholder="Search users"
      aria-label="Search users"
    />
    <ul>
      {users.map((user) => (
        <li key={user.id}>
          {editUserId === user.id ? (
            <span>
              <input
                name="name"
                value={editUser.name}
                onChange={onEditUserChange}
                aria-label="Edit name"
              />
              <input
                name="email"
                value={editUser.email}
                onChange={onEditUserChange}
                aria-label="Edit email"
              />
              <button onClick={onSaveUser}>Save</button>
              <button onClick={onCancelEdit}>Cancel</button>
            </span>
          ) : (
            <span>
              {user.name} ({user.email})
              <button onClick={() => onEditUser(user)}>Edit</button>
              <button onClick={() => onDeleteUser(user.id)}>Delete</button>
            </span>
          )}
        </li>
      ))}
    </ul>
  </section>
);

export default UserList;
