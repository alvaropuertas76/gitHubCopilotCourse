// Generated by Copilot
import React from "react";
import { render, screen, fireEvent } from "@testing-library/react";
import "@testing-library/jest-dom";
import UserList from "./UserList";
import { User } from "./types";

const users: User[] = [
  { id: 1, name: "Alice", email: "alice@example.com" },
  { id: 2, name: "Bob", email: "bob@example.com" },
];

test("renders UserList and handles edit/delete", () => {
  const onEditUser = jest.fn();
  const onEditUserChange = jest.fn();
  const onSaveUser = jest.fn();
  const onDeleteUser = jest.fn();
  const onCancelEdit = jest.fn();
  const setSearchUser = jest.fn();

  render(
    <UserList
      users={users}
      editUserId={null}
      editUser={{ id: 0, name: "", email: "" }}
      onEditUser={onEditUser}
      onEditUserChange={onEditUserChange}
      onSaveUser={onSaveUser}
      onDeleteUser={onDeleteUser}
      onCancelEdit={onCancelEdit}
      searchUser=""
      setSearchUser={setSearchUser}
    />
  );

  expect(screen.getByText(/Users/i)).toBeInTheDocument();
  expect(screen.getByPlaceholderText(/Search users/i)).toBeInTheDocument();
  expect(screen.getByText(/Alice/i)).toBeInTheDocument();
  expect(screen.getByText(/Bob/i)).toBeInTheDocument();

  fireEvent.click(screen.getAllByText(/Edit/i)[0]);
  expect(onEditUser).toHaveBeenCalled();

  fireEvent.click(screen.getAllByText(/Delete/i)[0]);
  expect(onDeleteUser).toHaveBeenCalled();
});

test("renders edit mode for a user", () => {
  const onEditUser = jest.fn();
  const onEditUserChange = jest.fn();
  const onSaveUser = jest.fn();
  const onDeleteUser = jest.fn();
  const onCancelEdit = jest.fn();
  const setSearchUser = jest.fn();

  render(
    <UserList
      users={users}
      editUserId={1}
      editUser={{ id: 1, name: "Alice", email: "alice@example.com" }}
      onEditUser={onEditUser}
      onEditUserChange={onEditUserChange}
      onSaveUser={onSaveUser}
      onDeleteUser={onDeleteUser}
      onCancelEdit={onCancelEdit}
      searchUser=""
      setSearchUser={setSearchUser}
    />
  );

  expect(screen.getByDisplayValue("Alice")).toBeInTheDocument();
  expect(screen.getByDisplayValue("alice@example.com")).toBeInTheDocument();

  fireEvent.click(screen.getByText(/Save/i));
  expect(onSaveUser).toHaveBeenCalled();

  fireEvent.click(screen.getByText(/Cancel/i));
  expect(onCancelEdit).toHaveBeenCalled();
});
